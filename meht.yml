

// 给实例添加属性 也就是原型上的方法
        /*klass.create = function (obj) {
        // 创建一个函数保存一下当前状态。
        var create = function (key, i, func) {

        if (typeof func === 'function') {

        klass.fn[key][i] = function () {
        return func.apply(klass.fn, arguments);
        };
        } else {
        klass.fn[key][i] = func;
        }
        };

        // 循环obj， 将所有的东西加载到原型上
        for (var key in obj) {
        const _key = key.toLowerCase();
        if (_key === 'methods') {
        for (var i in obj[key]) {
        create(key, i, obj[key][i])
        }
        } else {
        klass.fn.methods[key] = obj[key];
        }

        console.log(key)
        klass.fn[key] = klass.fn[key] || {};

        /!*for (var i in obj[key]) {
        create(key, i, obj[key][i])
        }*!/
        }
        };*/
